@using System
@using System.Linq
@using System.Threading.Tasks
@using ChatExporter.Exporter
@using Common.Entities
@using DiscordChatExporter.Core.Discord
@using DiscordChatExporter.Core.Exporting.Writers.Html;

@namespace ChatExporter.Exporter.MessageHistories
@inherits MiniRazor.TemplateBase<ChatExporter.Exporter.MessageHistories.MessageHistorySnapshotContext>

@{
    string FormatMarkdown(MessageSnapshot markdown) => Model.FormatMarkdown(markdown);

    var userMember = Model.Context.TryGetMember(Model.Context.MessageHistory.Author);

    string GetAvatarUrl() {
        if (userMember?.User.AvatarUrl != null) {
            return userMember.User.AvatarUrl;
        }

        // Default deleted account avatar
        return "https://discord.com/assets/1f0bfc0865d324c2587920a7d80c609b.png";
    }

    string GetAuthorNick() {
        return userMember?.Nick
               ?? userMember?.User.Name
               ?? "Unknown";
    }
}

<div class="chatlog__message-group">
    @if (Model.Snapshot.IsAboutHistoryUnavailability) {
        <i>Previous message history not available</i>
    }
    else {
        @* Avatar *@
        <div class="chatlog__author-avatar-container">
            <img class="chatlog__author-avatar" src="@GetAvatarUrl()" alt="Avatar" loading="lazy">
        </div>

        <div class="chatlog__messages">
            @* Author name *@
            <span class="chatlog__author-name" title="@GetAuthorNick()" data-user-id="@Model.Context.MessageHistory.Author">@GetAuthorNick()</span>

            @* Message timestamp *@
            <span class="chatlog__timestamp">@Model.Snapshot.EditTimestamp.Format()</span>

            @* Edit number *@
            <span class="chatlog__timestamp">Edit number: @Model.Snapshot.ChangeIndex</span>

            @* Snapshot *@
            <div class="chatlog__message" data-message-id="@Model.Context.MessageHistory.Id" id="message-@Model.Context.MessageHistory.Id">
                <div class="chatlog__content">
                    <div class="markdown">
                        @* Message content *@
                        <span class="preserve-whitespace">@Raw(FormatMarkdown(Model.Snapshot))</span>
                    </div>
                </div>
            </div>
        </div>
    }
</div>